20000412-1.c
3000$  Instruction: %0:gr32 = MOVSX32rm16 $rip, 1, $noreg, @i, $noreg :: (dereferenceable load (s16) from @i, !tbaa !5)

MOVSX32rm16|2500:1000,58   Instruction: %1:gr32 = ADD32ri %0:gr32(tied-def 0), 207, implicit-def dead $eflags

ADD32ri|544:1001,1000,28   Instruction: %2:gr64_nosp = SUBREG_TO_REG 0, killed %1:gr32, %subreg.sub_32bit

SUBREG_TO_REG|11:1002,1001   Instruction: %3:gr64 = LEA64r $noreg, 8, killed %2:gr64_nosp, @wordlist, $noreg

LEA64r|1951:1003,1002   Instruction: $rax = COPY %3:gr64

COPY|19:51,1003   Instruction: RET 0, $rax

RET|3459:51 
~
3000$  Instruction: renamable $eax = MOVSX32rm16 $rip, 1, $noreg, @i, $noreg, implicit-def $rax :: (dereferenceable load (s16) from @i, !tbaa !5)

MOVSX32rm16|2500:22,58,51   Instruction: renamable $eax = ADD32ri renamable $eax(tied-def 0), 207, implicit-def dead $eflags, implicit killed $rax, implicit-def $rax

ADD32ri|544:22,22,28,51,51   Instruction: renamable $rax = LEA64r $noreg, 8, killed renamable $rax, @wordlist, $noreg

LEA64r|1951:51,51   Instruction: RET 0, $rax

RET|3459:51 
&
3000$  Instruction: CMP16mi $rip, 1, $noreg, @i, $noreg, -1, implicit-def $eflags :: (dereferenceable load (s16) from @i, !tbaa !5)

CMP16mi|1145:58,28   Instruction: JCC_1 %bb.2, 4, implicit $eflags

JCC_1|1799:3002,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3002$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: $edi = MOV32r0 implicit-def dead $eflags

MOV32r0|315:26,28   Instruction: CALL64pcrel32 target-flags(x86-plt) @exit, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,26,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
~
3000$  Instruction: CMP16mi $rip, 1, $noreg, @i, $noreg, -1, implicit-def $eflags :: (dereferenceable load (s16) from @i, !tbaa !5)

CMP16mi|1145:58,28   Instruction: JCC_1 %bb.2, 4, implicit killed $eflags

JCC_1|1799:3002,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3002$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: $edi = MOV32r0 implicit-def dead $eflags

MOV32r0|315:26,28   Instruction: CALL64pcrel32 target-flags(x86-plt) @exit, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit killed $edi, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,26,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
&
