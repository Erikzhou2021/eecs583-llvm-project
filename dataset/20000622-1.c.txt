20000622-1.c
3000$  Instruction: %2:gr64 = COPY $rdx

COPY|19:1002,56   Instruction: %1:gr64 = COPY $rsi

COPY|19:1001,60   Instruction: %0:gr64 = COPY $rdi

COPY|19:1000,55   Instruction: CMP64ri32 %0:gr64, 12, implicit-def $eflags

CMP64ri32|1166:1000,28   Instruction: JCC_1 %bb.1, 5, implicit $eflags

JCC_1|1799:3001,28   Instruction: JMP_1 %bb.4

JMP_1|1819:3004 
3004$  Instruction: CMP64ri32 %1:gr64, 1, implicit-def $eflags

CMP64ri32|1166:1001,28   Instruction: JCC_1 %bb.1, 5, implicit $eflags

JCC_1|1799:3001,28   Instruction: JMP_1 %bb.3

JMP_1|1819:3003 
3003$  Instruction: CMP64ri32 %2:gr64, 11, implicit-def $eflags

CMP64ri32|1166:1002,28   Instruction: JCC_1 %bb.2, 4, implicit $eflags

JCC_1|1799:3002,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3002$  Instruction: %6:gr32 = MOV32r0 implicit-def dead $eflags

MOV32r0|315:1006,28   Instruction: %7:gr64 = SUBREG_TO_REG 0, killed %6:gr32, %subreg.sub_32bit

SUBREG_TO_REG|11:1007,1006   Instruction: $rax = COPY %7:gr64

COPY|19:51,1007   Instruction: RET 0, $rax

RET|3459:51 
~
3000$  Instruction: CMP64ri32 killed renamable $rdi, 12, implicit-def $eflags

CMP64ri32|1166:55,28   Instruction: JCC_1 %bb.3, 5, implicit killed $eflags

JCC_1|1799:3003,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: CMP64ri32 killed renamable $rsi, 1, implicit-def $eflags

CMP64ri32|1166:60,28   Instruction: JCC_1 %bb.3, 5, implicit killed $eflags

JCC_1|1799:3003,28   Instruction: JMP_1 %bb.2

JMP_1|1819:3002 
3002$  Instruction: CMP64ri32 killed renamable $rdx, 11, implicit-def $eflags

CMP64ri32|1166:56,28   Instruction: JCC_1 %bb.4, 4, implicit killed $eflags

JCC_1|1799:3004,28   Instruction: JMP_1 %bb.3

JMP_1|1819:3003 
3003$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3004$  Instruction: dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $rax

MOV32r0|315:22,28,51   Instruction: RET 0, killed $rax

RET|3459:51 
&
3000$  Instruction: %1:gr64 = COPY $rsi

COPY|19:1001,60   Instruction: $rax = COPY %1:gr64

COPY|19:51,1001   Instruction: RET 0, $rax

RET|3459:51 
~
3000$  Instruction: renamable $rax = COPY $rsi

COPY|19:51,60   Instruction: RET 0, $rax

RET|3459:51 
&
3000$  Instruction: %2:gr64 = COPY $rdx

COPY|19:1002,56   Instruction: %1:gr64 = COPY $rsi

COPY|19:1001,60   Instruction: CMP64ri32 %1:gr64, 11, implicit-def $eflags

CMP64ri32|1166:1001,28   Instruction: JCC_1 %bb.1, 5, implicit $eflags

JCC_1|1799:3001,28   Instruction: JMP_1 %bb.3

JMP_1|1819:3003 
3003$  Instruction: CMP64ri32 %2:gr64, 12, implicit-def $eflags

CMP64ri32|1166:1002,28   Instruction: JCC_1 %bb.2, 4, implicit $eflags

JCC_1|1799:3002,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3002$  Instruction: RET 0

RET|3459: 
~
3000$  Instruction: CMP64ri32 killed renamable $rsi, 11, implicit-def $eflags

CMP64ri32|1166:60,28   Instruction: JCC_1 %bb.2, 5, implicit killed $eflags

JCC_1|1799:3002,28   Instruction: JMP_1 %bb.1

JMP_1|1819:3001 
3001$  Instruction: CMP64ri32 killed renamable $rdx, 12, implicit-def $eflags

CMP64ri32|1166:56,28   Instruction: JCC_1 %bb.3, 4, implicit killed $eflags

JCC_1|1799:3003,28   Instruction: JMP_1 %bb.2

JMP_1|1819:3002 
3002$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: CALL64pcrel32 target-flags(x86-plt) @abort, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
3003$  Instruction: RET 0

RET|3459: 
&
3000$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: $edi = MOV32r0 implicit-def dead $eflags

MOV32r0|315:26,28   Instruction: CALL64pcrel32 target-flags(x86-plt) @exit, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,26,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
~
3000$  Instruction: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKDOWN64|683:61,28,69,61,69   Instruction: $edi = MOV32r0 implicit-def dead $eflags

MOV32r0|315:26,28   Instruction: CALL64pcrel32 target-flags(x86-plt) @exit, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r12 $r13 $r14 $r15 $r12b $r13b $r14b $r15b $r12bh $r13bh $r14bh $r15bh $r12d $r13d $r14d $r15d $r12w $r13w $r14w $r15w $r12wh and 3 more...>, implicit $rsp, implicit $ssp, implicit killed $edi, implicit-def $rsp, implicit-def $ssp

CALL64pcrel32|1052:61,69,26,61,69   Instruction: ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp

ADJCALLSTACKUP64|685:61,28,69,61,69 
&
